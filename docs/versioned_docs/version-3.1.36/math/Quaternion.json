{
  "id": 135,
  "name": "Quaternion",
  "kind": 128,
  "kindString": "Class",
  "flags": {},
  "comment": {
    "shortText": "Defines a class that represents a Quaternion. That is, a representation of a 3D rotation.",
    "text": "Quaternions are a mathematical representation of 3D transformations and are commonly used to calculate and apply rotations to 3D points.\nThey work by defining a quaterion such that q = w + x*i + y*j + z*k, where w, x, y, and z are real numbers and i, j, and k are imaginary numbers.\nThe basics of this is that x, y, and z define a vector that represents the rotation axis, and w defines an angle around which the rotation occurs.\nHowever, because i, j, and k are included we can keep x, y, and z from incorrectly interacting with each other and so avoid common pitfalls like Gimbal lock.\n\nOne little known feature of quaternions is that they can also represent reflections and also scale.\nThis is because there are two different ways to apply a quaternion to a 3D point:\n\n- quaterion * point * inverse(quaterion)\n\nThis formula rotates and scales the point quaternion. The rotation occurs around the axis specified by the quaternion X, Y, and Z values.\nAdditionally, the point will be scaled by the length of the quaternion. (i.e. sqrt( x^2 + y^2 + z^2 + w^2 ))\nThis is why quaternions that are used to represent only rotations must be normalized.\n\n- quaternion * point * quaternion\n\nThis formula reflects scales the point by the quaternion. The reflection occurs across the axis specified by the quaternion X, Y, and Z values.\nAdditionally, the point will be scaled by the length of the quaternion. (i.e. sqrt( x^2 + y^2 + z^2 + w^2 ))\n"
  },
  "children": [
    {
      "id": 136,
      "name": "constructor",
      "kind": 512,
      "kindString": "Constructor",
      "flags": {},
      "sources": [
        {
          "fileName": "src/aux-common/math/Quaternion.ts",
          "line": 51,
          "character": 4
        }
      ],
      "signatures": [
        {
          "id": 137,
          "name": "new Quaternion",
          "kind": 16384,
          "kindString": "Constructor signature",
          "flags": {},
          "comment": {
            "shortText": "Creates a new Quaternion with the given values."
          },
          "parameters": [
            {
              "id": 138,
              "name": "x",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "comment": {
                "shortText": "The X value."
              },
              "type": {
                "type": "intrinsic",
                "name": "number"
              },
              "defaultValue": "0"
            },
            {
              "id": 139,
              "name": "y",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "comment": {
                "shortText": "The Y value."
              },
              "type": {
                "type": "intrinsic",
                "name": "number"
              },
              "defaultValue": "0"
            },
            {
              "id": 140,
              "name": "z",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "comment": {
                "shortText": "The Z value."
              },
              "type": {
                "type": "intrinsic",
                "name": "number"
              },
              "defaultValue": "0"
            },
            {
              "id": 141,
              "name": "w",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "comment": {
                "shortText": "The W value.\n"
              },
              "type": {
                "type": "intrinsic",
                "name": "number"
              },
              "defaultValue": "1"
            }
          ],
          "type": {
            "type": "reference",
            "id": 135,
            "name": "Quaternion"
          }
        }
      ]
    },
    {
      "id": 145,
      "name": "w",
      "kind": 1024,
      "kindString": "Property",
      "flags": {},
      "comment": {
        "shortText": "The W value of the quaternion."
      },
      "sources": [
        {
          "fileName": "src/aux-common/math/Quaternion.ts",
          "line": 42,
          "character": 4
        }
      ],
      "type": {
        "type": "intrinsic",
        "name": "number"
      }
    },
    {
      "id": 142,
      "name": "x",
      "kind": 1024,
      "kindString": "Property",
      "flags": {},
      "comment": {
        "shortText": "The X value of the quaternion."
      },
      "sources": [
        {
          "fileName": "src/aux-common/math/Quaternion.ts",
          "line": 27,
          "character": 4
        }
      ],
      "type": {
        "type": "intrinsic",
        "name": "number"
      }
    },
    {
      "id": 143,
      "name": "y",
      "kind": 1024,
      "kindString": "Property",
      "flags": {},
      "comment": {
        "shortText": "The Y value of the quaternion."
      },
      "sources": [
        {
          "fileName": "src/aux-common/math/Quaternion.ts",
          "line": 32,
          "character": 4
        }
      ],
      "type": {
        "type": "intrinsic",
        "name": "number"
      }
    },
    {
      "id": 144,
      "name": "z",
      "kind": 1024,
      "kindString": "Property",
      "flags": {},
      "comment": {
        "shortText": "The Z value of the quaternion."
      },
      "sources": [
        {
          "fileName": "src/aux-common/math/Quaternion.ts",
          "line": 37,
          "character": 4
        }
      ],
      "type": {
        "type": "intrinsic",
        "name": "number"
      }
    },
    {
      "id": 159,
      "name": "equals",
      "kind": 2048,
      "kindString": "Method",
      "flags": {},
      "sources": [
        {
          "fileName": "src/aux-common/math/Quaternion.ts",
          "line": 154,
          "character": 4
        }
      ],
      "signatures": [
        {
          "id": 160,
          "name": "equals",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "comment": {
            "shortText": "Determines if this quaternion equals the other quaternion."
          },
          "parameters": [
            {
              "id": 161,
              "name": "other",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "comment": {
                "shortText": "The other quaternion to apply.\n"
              },
              "type": {
                "type": "reference",
                "id": 135,
                "name": "Quaternion"
              }
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        }
      ]
    },
    {
      "id": 149,
      "name": "invert",
      "kind": 2048,
      "kindString": "Method",
      "flags": {},
      "sources": [
        {
          "fileName": "src/aux-common/math/Quaternion.ts",
          "line": 100,
          "character": 4
        }
      ],
      "signatures": [
        {
          "id": 150,
          "name": "invert",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "comment": {
            "shortText": "Calculates the conjugate of this quaternion and returns the result.\nThe conjugate (or inverse) of a quaternion is similar to negating a number.\nWhen you multiply a quaternion by its conjugate, the result is the identity quaternion."
          },
          "type": {
            "type": "reference",
            "id": 135,
            "name": "Quaternion"
          }
        }
      ]
    },
    {
      "id": 151,
      "name": "length",
      "kind": 2048,
      "kindString": "Method",
      "flags": {},
      "sources": [
        {
          "fileName": "src/aux-common/math/Quaternion.ts",
          "line": 107,
          "character": 4
        }
      ],
      "signatures": [
        {
          "id": 152,
          "name": "length",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "comment": {
            "shortText": "Gets the length of this vector. That is, the pathagorean theorem applied to X, Y, Z, and W."
          },
          "type": {
            "type": "intrinsic",
            "name": "number"
          }
        }
      ]
    },
    {
      "id": 146,
      "name": "multiply",
      "kind": 2048,
      "kindString": "Method",
      "flags": {},
      "sources": [
        {
          "fileName": "src/aux-common/math/Quaternion.ts",
          "line": 70,
          "character": 4
        }
      ],
      "signatures": [
        {
          "id": 147,
          "name": "multiply",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "comment": {
            "shortText": "Multiplies this quaternion by the other quaternion and returns the result.\nIn quaternion math, multiplication can be used to combine quaternions together,\nhowever unlike regular multiplication quaternion multiplication is order dependent.",
            "text": "Which frame of reference you want to use depends on which order you use.\nFor example, q2.multiply(q1) starts with the identity, applies q1 to it, and then applies q2 to that.\nWhereas, q1.multiply(q2) starts with the identity, applies q2 to it, and then applies q1 to that.\n"
          },
          "parameters": [
            {
              "id": 148,
              "name": "other",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "comment": {
                "shortText": "The other quaternion.\n"
              },
              "type": {
                "type": "reference",
                "id": 135,
                "name": "Quaternion"
              }
            }
          ],
          "type": {
            "type": "reference",
            "id": 135,
            "name": "Quaternion"
          }
        }
      ]
    },
    {
      "id": 155,
      "name": "normalize",
      "kind": 2048,
      "kindString": "Method",
      "flags": {},
      "sources": [
        {
          "fileName": "src/aux-common/math/Quaternion.ts",
          "line": 136,
          "character": 4
        }
      ],
      "signatures": [
        {
          "id": 156,
          "name": "normalize",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "comment": {
            "shortText": "Calculates the normalized version of this quaternion and returns it.\nA normalized quaternion is a quaternion whose length equals 1.",
            "text": "Normalizing a quaternion preserves its rotation/reflection while making the length (i.e. scale) of it 1.\n"
          },
          "type": {
            "type": "reference",
            "id": 135,
            "name": "Quaternion"
          }
        }
      ]
    },
    {
      "id": 153,
      "name": "squareLength",
      "kind": 2048,
      "kindString": "Method",
      "flags": {},
      "sources": [
        {
          "fileName": "src/aux-common/math/Quaternion.ts",
          "line": 121,
          "character": 4
        }
      ],
      "signatures": [
        {
          "id": 154,
          "name": "squareLength",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "comment": {
            "shortText": "Calculates the square length of this quaternion and returns the result.\nThis is equivalent to length^2, but it is faster to calculate than length because it doesn't require\ncalculating a square root."
          },
          "type": {
            "type": "intrinsic",
            "name": "number"
          }
        }
      ]
    },
    {
      "id": 157,
      "name": "toString",
      "kind": 2048,
      "kindString": "Method",
      "flags": {},
      "sources": [
        {
          "fileName": "src/aux-common/math/Quaternion.ts",
          "line": 146,
          "character": 4
        }
      ],
      "signatures": [
        {
          "id": 158,
          "name": "toString",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        }
      ]
    }
  ],
  "groups": [
    {
      "title": "Constructors",
      "kind": 512,
      "children": [
        136
      ]
    },
    {
      "title": "Properties",
      "kind": 1024,
      "children": [
        145,
        142,
        143,
        144
      ]
    },
    {
      "title": "Methods",
      "kind": 2048,
      "children": [
        159,
        149,
        151,
        146,
        155,
        153,
        157
      ]
    }
  ],
  "sources": [
    {
      "fileName": "src/aux-common/math/Quaternion.ts",
      "line": 23,
      "character": 13
    }
  ]
}