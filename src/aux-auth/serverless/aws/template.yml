# This is the SAM template that represents the architecture of your serverless application
# https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-sam-template-basics.html

# The AWSTemplateFormatVersion identifies the capabilities of the template
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/format-version-structure.html
AWSTemplateFormatVersion: 2010-09-09
Description: >-
    aws

# Transform section specifies one or more macros that AWS CloudFormation uses to process your template
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-section-structure.html
Transform:
    - AWS::Serverless-2016-10-31

Parameters:
    FileRecordsS3StorageClassParameter:
        Type: String
        Description: The S3 Storage Class that should be used for file records.
    AllowedOriginsParameter:
        Type: String
        Description: The allowed origin domains that are able to make requests for the internal auth site APIs. This value should be a space-separated string that includes the origins that the auth site is hosted on.
    AllowedApiOriginsParameter:
        Type: String
        Description: The allowed origin domains that are able to make requests for the records APIs. This value should be a space-separated string that includes the origins that are allowed to request/publish records to this site.
    ServerConfigParameter:
        Type: String
        Description: The JSON configuration that should be used.

Globals:
    Api:
        # enable CORS; to make more specific, change the origin wildcard
        # to a particular domain name, e.g. "'www.example.com'"
        # TODO: add a CORS policy to the API Gateway
        Cors:
            AllowMethods: "'*'"
            AllowHeaders: "'*'"
            AllowOrigin: "'*'"

# Resources declares the AWS resources that you want to include in the stack
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/resources-section-structure.html
Resources:
    # Each Lambda function is defined by properties:
    # https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction

    # This is a Lambda function config associated with the source code: services.js
    handleRecords:
        Type: AWS::Serverless::Function
        Properties:
            Handler: Records.handleRecords
            CodeUri: dist/handlers
            Runtime: nodejs14.x
            MemorySize: 256
            Timeout: 100
            Description: A function that publishes and retreives records for the user.
            Policies:
                # Give Create/Read/Update/Delete Permissions to the Bucket
                - S3CrudPolicy:
                      BucketName: !Sub '${AWS::StackName}-filesbucket-${AWS::AccountId}'
            Environment:
                Variables:
                    SERVER_CONFIG: !Ref ServerConfigParameter
                    REGION: !Ref 'AWS::Region'
                    FILES_BUCKET: !Sub '${AWS::StackName}-filesbucket-${AWS::AccountId}'
                    FILES_STORAGE_CLASS: !Ref FileRecordsS3StorageClassParameter
                    ALLOWED_ORIGINS: !Ref AllowedOriginsParameter
                    ALLOWED_API_ORIGINS: !Ref AllowedApiOriginsParameter
            Events:
                CreateRecordKey:
                    Type: Api
                    Properties:
                        Path: /api/v2/records/key
                        Method: POST
                RecordData:
                    Type: Api
                    Properties:
                        Path: /api/v2/records/data
                        Method: POST
                EraseData:
                    Type: Api
                    Properties:
                        Path: /api/v2/records/data
                        Method: DELETE
                GetData:
                    Type: Api
                    Properties:
                        Path: /api/v2/records/data
                        Method: GET
                ListData:
                    Type: Api
                    Properties:
                        Path: /api/v2/records/data/list
                        Method: GET
                RecordManualData:
                    Type: Api
                    Properties:
                        Path: /api/v2/records/manual/data
                        Method: POST
                EraseManualData:
                    Type: Api
                    Properties:
                        Path: /api/v2/records/manual/data
                        Method: DELETE
                GetManualData:
                    Type: Api
                    Properties:
                        Path: /api/v2/records/manual/data
                        Method: GET
                RecordFile:
                    Type: Api
                    Properties:
                        Path: /api/v2/records/file
                        Method: POST
                EraseFile:
                    Type: Api
                    Properties:
                        Path: /api/v2/records/file
                        Method: DELETE
                ReadFile:
                    Type: Api
                    Properties:
                        Path: /api/v2/records/file
                        Method: GET
                UpdateFile:
                    Type: Api
                    Properties:
                        Path: /api/v2/records/file
                        Method: PUT
                AddEventCount:
                    Type: Api
                    Properties:
                        Path: /api/v2/records/events/count
                        Method: POST
                GetEventCount:
                    Type: Api
                    Properties:
                        Path: /api/v2/records/events/count
                        Method: GET
                UpdateEvent:
                    Type: Api
                    Properties:
                        Path: /api/v2/records/events
                        Method: POST
                MarkFileUploaded:
                    Type: S3
                    Properties:
                        Bucket: !Ref FilesBucket
                        Events: s3:ObjectCreated:Put
                ReadPolicy:
                    Type: Api
                    Properties:
                        Path: /api/v2/records/policy
                        Method: GET
                ListPolicies:
                    Type: Api
                    Properties:
                        Path: /api/v2/records/policy/list
                        Method: GET
                GrantPermission:
                    Type: Api
                    Properties:
                        Path: /api/v2/records/policy/grantPermission
                        Method: POST
                RevokePermission:
                    Type: Api
                    Properties:
                        Path: /api/v2/records/policy/revokePermission
                        Method: POST
                ListUserRoles:
                    Type: Api
                    Properties:
                        Path: /api/v2/records/role/user/list
                        Method: GET
                ListInstRoles:
                    Type: Api
                    Properties:
                        Path: /api/v2/records/role/inst/list
                        Method: GET
                ListRolesAssignments:
                    Type: Api
                    Properties:
                        Path: /api/v2/records/role/assignments/list
                        Method: GET
                GrantRole:
                    Type: Api
                    Properties:
                        Path: /api/v2/records/role/grant
                        Method: POST
                RevokeRole:
                    Type: Api
                    Properties:
                        Path: /api/v2/records/role/revoke
                        Method: POST
                GetMeetToken:
                    Type: Api
                    Properties:
                        Path: /api/v2/meet/token
                        Method: POST
                Login:
                    Type: Api
                    Properties:
                        Path: /api/v2/login
                        Method: POST
                CompleteLogin:
                    Type: Api
                    Properties:
                        Path: /api/v2/completeLogin
                        Method: POST
                RevokeSession:
                    Type: Api
                    Properties:
                        Path: /api/v2/revokeSession
                        Method: POST
                ListSessions:
                    Type: Api
                    Properties:
                        Path: /api/v2/sessions
                        Method: GET
                RevokeAllSessions:
                    Type: Api
                    Properties:
                        Path: /api/v2/revokeAllSessions
                        Method: POST
                ReplaceSession:
                    Type: Api
                    Properties:
                        Path: /api/v2/replaceSession
                        Method: POST
                GetMetadata:
                    Type: Api
                    Properties:
                        Path: /api/{userId}/metadata
                        Method: GET
                PutMetadata:
                    Type: Api
                    Properties:
                        Path: /api/{userId}/metadata
                        Method: PUT
                GetSubscriptions:
                    Type: Api
                    Properties:
                        Path: /api/{userId}/subscription
                        Method: GET
                ManageSubscriptions:
                    Type: Api
                    Properties:
                        Path: /api/{userId}/subscription/manage
                        Method: POST
                StripeWebhook:
                    Type: Api
                    Properties:
                        Path: /api/stripeWebhook
                        Method: POST
                KeepWarm:
                    Type: Schedule
                    Properties:
                        Schedule: 'rate(5 minutes)'
                        Description: Event to keep the function always warm
    HandleRecordsLogGroup:
        Type: AWS::Logs::LogGroup
        Properties:
            LogGroupName: !Sub '/aws/lambda/${handleRecords}'
            RetentionInDays: 14

    # Simple syntax to create a DynamoDB table with a single attribute primary key, more in
    # https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlesssimpletable

    FilesBucket:
        Type: AWS::S3::Bucket
        DeletionPolicy: Retain
        Properties:
            BucketName: !Sub '${AWS::StackName}-filesbucket-${AWS::AccountId}'
            CorsConfiguration:
                CorsRules:
                    - AllowedHeaders:
                          - '*'
                      AllowedMethods:
                          - GET
                          - PUT
                          - POST
                      AllowedOrigins:
                          - '*'
                      ExposedHeaders: []
                      MaxAge: 3000
            PublicAccessBlockConfiguration:
                BlockPublicAcls: false
                BlockPublicPolicy: false
                IgnorePublicAcls: false
                RestrictPublicBuckets: false
            OwnershipControls:
                Rules:
                    - ObjectOwnership: BucketOwnerPreferred

Outputs:
    WebEndpoint:
        Description: 'API Gateway endpoint URL for Prod stage'
        Value: !Sub 'https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/'
