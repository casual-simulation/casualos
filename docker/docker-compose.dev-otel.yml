version: '3.7'

volumes:
    mongodata:
    tempo:

services:
    mongo:
        image: 'mongo:latest'
        restart: always
        ports:
            - '27017:27017'
        volumes:
            - 'mongodata:/data/db'
    redis:
        image: 'redis:latest'
        restart: always
        ports:
            - '6379:6379'
    s3:
        image: localstack/localstack:latest
        environment:
            - SERVICES=s3
            - DEFAULT_REGION=us-east-1
            - DATA_DIR=/tmp/s3-data
        ports:
            - '4566:4566'
        volumes:
            - './services/data/s3:/tmp/s3-data'
    livekit:
        image: livekit/livekit-server:v1.6.1
        command: --config /etc/livekit.yaml
        restart: always
        depends_on:
            - redis
        ports:
            - '7880:7880'
            - '7881:7881'
            - '7882:7882/udp'
        volumes:
            - ./conf/livekit.yaml:/etc/livekit.yaml

    # And put them in an OTEL collector pipeline...
    otel-collector:
        image: otel/opentelemetry-collector:0.86.0
        command: ['--config=/etc/otel-collector.yaml']
        volumes:
            - ./conf/otel-collector.yaml:/etc/otel-collector.yaml
        ports:
            - '4317:4317' # otlp grpc
            - '4318:4318' # otlp http
            - '4319:4319' # prometheus metrics

    # Tempo runs as user 10001, and docker compose creates the volume as root.
    # As such, we need to chown the volume in order for Tempo to start correctly.
    init:
        image: &tempoImage grafana/tempo:latest
        user: root
        entrypoint:
            - 'chown'
            - '10001:10001'
            - '/var/tempo'
        volumes:
            - tempo:/var/tempo

    tempo:
        image: *tempoImage
        command: ['-config.file=/etc/tempo.yaml']
        volumes:
            - ./conf/tempo.yaml:/etc/tempo.yaml
            - tempo:/var/tempo
        ports:
            - '14268' # jaeger ingest
            - '3200' # tempo
            - '4317' # otlp grpc
            - '4318' # otlp http
            - '9411' # zipkin
        depends_on:
            - init

    prometheus:
        image: prom/prometheus:latest
        command:
            - --config.file=/etc/prometheus.yaml
            - --web.enable-remote-write-receiver
            - --enable-feature=exemplar-storage
        volumes:
            - ./conf/prometheus.yaml:/etc/prometheus.yaml
        ports:
            - '9090:9090'

    grafana:
        image: grafana/grafana:11.0.0
        volumes:
            - ./conf/grafana-datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml
        environment:
            - GF_AUTH_ANONYMOUS_ENABLED=true
            - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
            - GF_AUTH_DISABLE_LOGIN_FORM=true
            - GF_FEATURE_TOGGLES_ENABLE=traceqlEditor
        ports:
            - '3100:3000'
